version: '3'
services:

  etcd:
    image: 'gcr.io/etcd-development/etcd:latest'
    restart: always
    network_mode: host
    environment:
      - ETCD_NAME=etcd
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:3380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:3379
      - ETCD_ADVERTISE_CLIENT_URLS=http://172.28.232.235:3379
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://172.28.232.235:3380
      - ETCD_INITIAL_CLUSTER=etcd=http://172.28.232.235:3380


  # https://www.mongodb.com/docs/manual/tutorial/enforce-keyfile-access-control-in-existing-replica-set/
  #
  #openssl rand -base64 756 > keyfile
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ../keyfile:/data/keys/keyfile
    # chmod 400 keys/keyfile   chown 999:999 keys/keyfile
    ports:
      - "27020:27017"
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/keys/keyfile
        chown 999:999 /data/keys/keyfile
        exec docker-entrypoint.sh $$@
    command: "mongod --bind_ip_all --replSet=rs --keyFile=/data/keys/keyfile"

  discovery:
    image: ghcr.io/catusax/mongo-discovery:latest
    restart: always
    depends_on:
      - etcd
    environment:
      CLUSTER_SIZE: "2"
      DELETE: "true"
      MEMBER_NAME: node1
      MEMBER_HOST: 172.28.232.235:27020
      ETCD_ENDPOINTS: http://172.28.232.235:3379
      MONGO_HOST: 172.28.232.235:27020
      MONGO_REPLICA_NAME: rs
      MONGO_USER_NAME: root
      MONGO_PASSWORD: example